plugins {
    id 'org.flywaydb.flyway' version '9.1.6'
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
}

group = 'ru.hookaorder'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // SWAGGER
    implementation 'io.springfox:springfox-boot-starter:3.0.0'

    // JWT
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'

    implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.3'
    implementation 'com.google.guava:guava:31.1-jre'


    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.flywaydb:flyway-core'

    //FCM
    implementation 'com.google.firebase:firebase-admin:9.1.1'
}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar {
    archiveClassifier.set('boot')
}

jar {
    archiveClassifier.set('')
}

tasks.compileJava {
    doFirst {
        new File("$projectDir/src/main/resources/service-account.json").text = """
            {
              "type": "service_account",
              "project_id": "${System.getenv("PROJECT_ID")}",
              "private_key_id": "${System.getenv("PRIVATE_KEY_ID")}",
              "private_key": "${System.getenv("PRIVATE_KEY_ID")}",
              "client_email": "${System.getenv("CLIENT_EMAIL")}",
              "client_id": "${System.getenv("CLIENT_ID")}",
              "auth_uri": "https://accounts.google.com/o/oauth2/auth",
              "token_uri": "https://oauth2.googleapis.com/token",
              "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
              "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-5ra4m%40hookahorder-75e32.iam.gserviceaccount.com"
            }
            """
    }
}
